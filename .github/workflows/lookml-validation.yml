name: LookML Validation Pipeline

on:
  pull_request:
    branches: [ main, master, develop ]
    paths: 
      - '**/*.lookml'
      - '**/*.lkml'
      - '**/*.model'
      - '**/*.view'
      - '**/*.explore'
      - '**/*.dashboard'
      - 'manifest.lkml'
  push:
    branches: [ main, master ]
    paths: 
      - '**/*.lookml'
      - '**/*.lkml'
      - '**/*.model'
      - '**/*.view'
      - '**/*.explore'
      - '**/*.dashboard'
      - 'manifest.lkml'

jobs:
  lookml-validation:
    runs-on: ubuntu-latest
    name: Validate LookML Code
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
    
    - name: Cache Python dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/.github/scripts/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r .github/scripts/requirements.txt
    
    - name: Setup Looker configuration
      run: |
        cp .github/config/looker-config.ini.template looker.ini
        sed -i "s|YOUR_CLIENT_ID|${{ secrets.LOOKER_CLIENT_ID }}|g" looker.ini
        sed -i "s|YOUR_CLIENT_SECRET|${{ secrets.LOOKER_CLIENT_SECRET }}|g" looker.ini
        sed -i "s|YOUR_LOOKER_BASE_URL|${{ secrets.LOOKER_BASE_URL }}|g" looker.ini
      env:
        LOOKER_CLIENT_ID: ${{ secrets.LOOKER_CLIENT_ID }}
        LOOKER_CLIENT_SECRET: ${{ secrets.LOOKER_CLIENT_SECRET }}
        LOOKER_BASE_URL: ${{ secrets.LOOKER_BASE_URL }}
    
    - name: Get changed files
      id: changed-files
      uses: tj-actions/changed-files@v44
      with:
        files: |
          **/*.lookml
          **/*.lkml
          **/*.model
          **/*.view
          **/*.explore
          **/*.dashboard
          manifest.lkml
    
    - name: Display changed LookML files
      if: steps.changed-files.outputs.any_changed == 'true'
      run: |
        echo "Changed LookML files:"
        echo "${{ steps.changed-files.outputs.all_changed_files }}"
    
    - name: Validate LookML Syntax
      if: steps.changed-files.outputs.any_changed == 'true'
      run: |
        echo "üîç Running LookML syntax validation..."
        python .github/scripts/looker-validator.py --project-name="${{ github.event.repository.name }}"
      continue-on-error: false
    
    - name: Run LookML Linting
      if: steps.changed-files.outputs.any_changed == 'true'
      run: |
        echo "üìù Running custom LookML linting..."
        python .github/scripts/lookml-linter.py --files="${{ steps.changed-files.outputs.all_changed_files }}"
      continue-on-error: false
    
    - name: Generate Validation Report
      if: always() && steps.changed-files.outputs.any_changed == 'true'
      run: |
        echo "üìä Generating validation report..."
        python .github/scripts/report-generator.py
    
    - name: Upload validation artifacts
      if: always() && steps.changed-files.outputs.any_changed == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: lookml-validation-results
        path: |
          validation_results.json
          linting_results.json
          validation_summary.md
        retention-days: 30
    
    - name: Check validation results
      if: steps.changed-files.outputs.any_changed == 'true'
      run: |
        python .github/scripts/check-results.py
    
    - name: Comment PR with results
      if: github.event_name == 'pull_request' && steps.changed-files.outputs.any_changed == 'true'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          
          if (fs.existsSync('pr_comment.md')) {
            const comment = fs.readFileSync('pr_comment.md', 'utf8');
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
          } else {
            console.log('No PR comment file found');
          }
